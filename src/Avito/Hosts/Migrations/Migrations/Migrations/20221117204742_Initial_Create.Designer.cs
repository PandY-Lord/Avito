// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Migrations;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Migrations.Migrations
{
    [DbContext(typeof(MigrationsDbContext))]
    [Migration("20221117204742_Initial_Create")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Avito.Domain.Advert", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CreateDate")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1200)
                        .HasColumnType("character varying(1200)");

                    b.Property<int>("PersonId")
                        .HasColumnType("integer");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Price")
                        .HasColumnType("integer");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasMaxLength(135)
                        .HasColumnType("character varying(135)");

                    b.HasKey("Id");

                    b.ToTable("AvitoDtoAdvert", (string)null);
                });

            modelBuilder.Entity("Avito.Domain.Categorys", b =>
                {
                    b.Property<Guid>("CategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("CategoryName")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("CategoryId");

                    b.ToTable("Categories", (string)null);
                });

            modelBuilder.Entity("Avito.Domain.Cities", b =>
                {
                    b.Property<Guid>("LocationId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("LocationName")
                        .IsRequired()
                        .HasMaxLength(666)
                        .HasColumnType("character varying(666)");

                    b.HasKey("LocationId");

                    b.ToTable("Cities", (string)null);
                });

            modelBuilder.Entity("Avito.Domain.Pictures", b =>
                {
                    b.Property<Guid>("PicturesId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Image")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("PicturesnName")
                        .HasColumnType("text");

                    b.HasKey("PicturesId");

                    b.ToTable("Picture", (string)null);
                });

            modelBuilder.Entity("Avito.Domain.Advert", b =>
                {
                    b.HasOne("Avito.Domain.Categorys", "Category")
                        .WithMany("CategorysAdvert")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Avito.Domain.Cities", "Location")
                        .WithMany("CitiesAdverts")
                        .HasForeignKey("Id")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");

                    b.Navigation("Location");
                });

            modelBuilder.Entity("Avito.Domain.Pictures", b =>
                {
                    b.HasOne("Avito.Domain.Advert", "PicturesAdvert")
                        .WithMany("Pictures")
                        .HasForeignKey("PicturesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("PicturesAdvert");
                });

            modelBuilder.Entity("Avito.Domain.Advert", b =>
                {
                    b.Navigation("Pictures");
                });

            modelBuilder.Entity("Avito.Domain.Categorys", b =>
                {
                    b.Navigation("CategorysAdvert");
                });

            modelBuilder.Entity("Avito.Domain.Cities", b =>
                {
                    b.Navigation("CitiesAdverts");
                });
#pragma warning restore 612, 618
        }
    }
}
